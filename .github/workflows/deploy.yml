name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Build and test
      run: |
        ./cicd/scripts/build.sh
        ./cicd/scripts/test.sh
        
  build-docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: yourusername/local-ai-agent
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,format=short
          
    - name: Build and push backend images
      run: |
        for service in backend/*; do
          if [ -d "$service" ]; then
            service_name=$(basename $service)
            echo "Building and pushing $service_name..."
            docker build -t yourusername/local-ai-agent-$service_name:${{ steps.meta.outputs.version }} $service
            docker push yourusername/local-ai-agent-$service_name:${{ steps.meta.outputs.version }}
          fi
        done
        
    - name: Build and push frontend images
      run: |
        for app in frontend/*; do
          if [ -d "$app" ]; then
            app_name=$(basename $app)
            echo "Building and pushing $app_name..."
            docker build -t yourusername/local-ai-agent-$app_name:${{ steps.meta.outputs.version }} $app
            docker push yourusername/local-ai-agent-$app_name:${{ steps.meta.outputs.version }}
          fi
        done
        
  deploy-to-production:
    needs: build-docker-images
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /opt/local-ai-agent-system
          git pull
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d
          
  create-release:
    needs: build-docker-images
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.0.1
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        files: |
          LICENSE
          README.md
